// Code generated by go-swagger; DO NOT EDIT.

package template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteTemplateServerReader is a Reader for the DeleteTemplateServer structure.
type DeleteTemplateServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTemplateServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTemplateServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTemplateServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteTemplateServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTemplateServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteTemplateServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewDeleteTemplateServerPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTemplateServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /template/server] DeleteTemplateServer", response, response.Code())
	}
}

// NewDeleteTemplateServerOK creates a DeleteTemplateServerOK with default headers values
func NewDeleteTemplateServerOK() *DeleteTemplateServerOK {
	return &DeleteTemplateServerOK{}
}

/*
DeleteTemplateServerOK describes a response with status code 200, with default header values.

OK
*/
type DeleteTemplateServerOK struct {
	Payload string
}

// IsSuccess returns true when this delete template server o k response has a 2xx status code
func (o *DeleteTemplateServerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete template server o k response has a 3xx status code
func (o *DeleteTemplateServerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template server o k response has a 4xx status code
func (o *DeleteTemplateServerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete template server o k response has a 5xx status code
func (o *DeleteTemplateServerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template server o k response a status code equal to that given
func (o *DeleteTemplateServerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete template server o k response
func (o *DeleteTemplateServerOK) Code() int {
	return 200
}

func (o *DeleteTemplateServerOK) Error() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerOK  %+v", 200, o.Payload)
}

func (o *DeleteTemplateServerOK) String() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerOK  %+v", 200, o.Payload)
}

func (o *DeleteTemplateServerOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateServerBadRequest creates a DeleteTemplateServerBadRequest with default headers values
func NewDeleteTemplateServerBadRequest() *DeleteTemplateServerBadRequest {
	return &DeleteTemplateServerBadRequest{}
}

/*
DeleteTemplateServerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteTemplateServerBadRequest struct {
	Payload string
}

// IsSuccess returns true when this delete template server bad request response has a 2xx status code
func (o *DeleteTemplateServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template server bad request response has a 3xx status code
func (o *DeleteTemplateServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template server bad request response has a 4xx status code
func (o *DeleteTemplateServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template server bad request response has a 5xx status code
func (o *DeleteTemplateServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template server bad request response a status code equal to that given
func (o *DeleteTemplateServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete template server bad request response
func (o *DeleteTemplateServerBadRequest) Code() int {
	return 400
}

func (o *DeleteTemplateServerBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTemplateServerBadRequest) String() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTemplateServerBadRequest) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateServerUnauthorized creates a DeleteTemplateServerUnauthorized with default headers values
func NewDeleteTemplateServerUnauthorized() *DeleteTemplateServerUnauthorized {
	return &DeleteTemplateServerUnauthorized{}
}

/*
DeleteTemplateServerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteTemplateServerUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this delete template server unauthorized response has a 2xx status code
func (o *DeleteTemplateServerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template server unauthorized response has a 3xx status code
func (o *DeleteTemplateServerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template server unauthorized response has a 4xx status code
func (o *DeleteTemplateServerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template server unauthorized response has a 5xx status code
func (o *DeleteTemplateServerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template server unauthorized response a status code equal to that given
func (o *DeleteTemplateServerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete template server unauthorized response
func (o *DeleteTemplateServerUnauthorized) Code() int {
	return 401
}

func (o *DeleteTemplateServerUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTemplateServerUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTemplateServerUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateServerNotFound creates a DeleteTemplateServerNotFound with default headers values
func NewDeleteTemplateServerNotFound() *DeleteTemplateServerNotFound {
	return &DeleteTemplateServerNotFound{}
}

/*
DeleteTemplateServerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteTemplateServerNotFound struct {
	Payload string
}

// IsSuccess returns true when this delete template server not found response has a 2xx status code
func (o *DeleteTemplateServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template server not found response has a 3xx status code
func (o *DeleteTemplateServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template server not found response has a 4xx status code
func (o *DeleteTemplateServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template server not found response has a 5xx status code
func (o *DeleteTemplateServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template server not found response a status code equal to that given
func (o *DeleteTemplateServerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete template server not found response
func (o *DeleteTemplateServerNotFound) Code() int {
	return 404
}

func (o *DeleteTemplateServerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTemplateServerNotFound) String() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTemplateServerNotFound) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateServerConflict creates a DeleteTemplateServerConflict with default headers values
func NewDeleteTemplateServerConflict() *DeleteTemplateServerConflict {
	return &DeleteTemplateServerConflict{}
}

/*
DeleteTemplateServerConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteTemplateServerConflict struct {
	Payload string
}

// IsSuccess returns true when this delete template server conflict response has a 2xx status code
func (o *DeleteTemplateServerConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template server conflict response has a 3xx status code
func (o *DeleteTemplateServerConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template server conflict response has a 4xx status code
func (o *DeleteTemplateServerConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template server conflict response has a 5xx status code
func (o *DeleteTemplateServerConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template server conflict response a status code equal to that given
func (o *DeleteTemplateServerConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete template server conflict response
func (o *DeleteTemplateServerConflict) Code() int {
	return 409
}

func (o *DeleteTemplateServerConflict) Error() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerConflict  %+v", 409, o.Payload)
}

func (o *DeleteTemplateServerConflict) String() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerConflict  %+v", 409, o.Payload)
}

func (o *DeleteTemplateServerConflict) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateServerPreconditionFailed creates a DeleteTemplateServerPreconditionFailed with default headers values
func NewDeleteTemplateServerPreconditionFailed() *DeleteTemplateServerPreconditionFailed {
	return &DeleteTemplateServerPreconditionFailed{}
}

/*
DeleteTemplateServerPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type DeleteTemplateServerPreconditionFailed struct {
	Payload string
}

// IsSuccess returns true when this delete template server precondition failed response has a 2xx status code
func (o *DeleteTemplateServerPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template server precondition failed response has a 3xx status code
func (o *DeleteTemplateServerPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template server precondition failed response has a 4xx status code
func (o *DeleteTemplateServerPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template server precondition failed response has a 5xx status code
func (o *DeleteTemplateServerPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template server precondition failed response a status code equal to that given
func (o *DeleteTemplateServerPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the delete template server precondition failed response
func (o *DeleteTemplateServerPreconditionFailed) Code() int {
	return 412
}

func (o *DeleteTemplateServerPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteTemplateServerPreconditionFailed) String() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteTemplateServerPreconditionFailed) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateServerPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateServerInternalServerError creates a DeleteTemplateServerInternalServerError with default headers values
func NewDeleteTemplateServerInternalServerError() *DeleteTemplateServerInternalServerError {
	return &DeleteTemplateServerInternalServerError{}
}

/*
DeleteTemplateServerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteTemplateServerInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this delete template server internal server error response has a 2xx status code
func (o *DeleteTemplateServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template server internal server error response has a 3xx status code
func (o *DeleteTemplateServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template server internal server error response has a 4xx status code
func (o *DeleteTemplateServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete template server internal server error response has a 5xx status code
func (o *DeleteTemplateServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete template server internal server error response a status code equal to that given
func (o *DeleteTemplateServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete template server internal server error response
func (o *DeleteTemplateServerInternalServerError) Code() int {
	return 500
}

func (o *DeleteTemplateServerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTemplateServerInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /template/server][%d] deleteTemplateServerInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTemplateServerInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
