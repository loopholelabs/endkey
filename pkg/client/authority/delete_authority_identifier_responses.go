// Code generated by go-swagger; DO NOT EDIT.

package authority

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteAuthorityIdentifierReader is a Reader for the DeleteAuthorityIdentifier structure.
type DeleteAuthorityIdentifierReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAuthorityIdentifierReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAuthorityIdentifierOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAuthorityIdentifierBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAuthorityIdentifierUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAuthorityIdentifierNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteAuthorityIdentifierConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewDeleteAuthorityIdentifierPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAuthorityIdentifierInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /authority/{identifier}] DeleteAuthorityIdentifier", response, response.Code())
	}
}

// NewDeleteAuthorityIdentifierOK creates a DeleteAuthorityIdentifierOK with default headers values
func NewDeleteAuthorityIdentifierOK() *DeleteAuthorityIdentifierOK {
	return &DeleteAuthorityIdentifierOK{}
}

/*
DeleteAuthorityIdentifierOK describes a response with status code 200, with default header values.

OK
*/
type DeleteAuthorityIdentifierOK struct {
	Payload string
}

// IsSuccess returns true when this delete authority identifier o k response has a 2xx status code
func (o *DeleteAuthorityIdentifierOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete authority identifier o k response has a 3xx status code
func (o *DeleteAuthorityIdentifierOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authority identifier o k response has a 4xx status code
func (o *DeleteAuthorityIdentifierOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete authority identifier o k response has a 5xx status code
func (o *DeleteAuthorityIdentifierOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authority identifier o k response a status code equal to that given
func (o *DeleteAuthorityIdentifierOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete authority identifier o k response
func (o *DeleteAuthorityIdentifierOK) Code() int {
	return 200
}

func (o *DeleteAuthorityIdentifierOK) Error() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierOK  %+v", 200, o.Payload)
}

func (o *DeleteAuthorityIdentifierOK) String() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierOK  %+v", 200, o.Payload)
}

func (o *DeleteAuthorityIdentifierOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteAuthorityIdentifierOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorityIdentifierBadRequest creates a DeleteAuthorityIdentifierBadRequest with default headers values
func NewDeleteAuthorityIdentifierBadRequest() *DeleteAuthorityIdentifierBadRequest {
	return &DeleteAuthorityIdentifierBadRequest{}
}

/*
DeleteAuthorityIdentifierBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteAuthorityIdentifierBadRequest struct {
	Payload string
}

// IsSuccess returns true when this delete authority identifier bad request response has a 2xx status code
func (o *DeleteAuthorityIdentifierBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authority identifier bad request response has a 3xx status code
func (o *DeleteAuthorityIdentifierBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authority identifier bad request response has a 4xx status code
func (o *DeleteAuthorityIdentifierBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authority identifier bad request response has a 5xx status code
func (o *DeleteAuthorityIdentifierBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authority identifier bad request response a status code equal to that given
func (o *DeleteAuthorityIdentifierBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete authority identifier bad request response
func (o *DeleteAuthorityIdentifierBadRequest) Code() int {
	return 400
}

func (o *DeleteAuthorityIdentifierBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAuthorityIdentifierBadRequest) String() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAuthorityIdentifierBadRequest) GetPayload() string {
	return o.Payload
}

func (o *DeleteAuthorityIdentifierBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorityIdentifierUnauthorized creates a DeleteAuthorityIdentifierUnauthorized with default headers values
func NewDeleteAuthorityIdentifierUnauthorized() *DeleteAuthorityIdentifierUnauthorized {
	return &DeleteAuthorityIdentifierUnauthorized{}
}

/*
DeleteAuthorityIdentifierUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAuthorityIdentifierUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this delete authority identifier unauthorized response has a 2xx status code
func (o *DeleteAuthorityIdentifierUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authority identifier unauthorized response has a 3xx status code
func (o *DeleteAuthorityIdentifierUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authority identifier unauthorized response has a 4xx status code
func (o *DeleteAuthorityIdentifierUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authority identifier unauthorized response has a 5xx status code
func (o *DeleteAuthorityIdentifierUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authority identifier unauthorized response a status code equal to that given
func (o *DeleteAuthorityIdentifierUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete authority identifier unauthorized response
func (o *DeleteAuthorityIdentifierUnauthorized) Code() int {
	return 401
}

func (o *DeleteAuthorityIdentifierUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAuthorityIdentifierUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAuthorityIdentifierUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *DeleteAuthorityIdentifierUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorityIdentifierNotFound creates a DeleteAuthorityIdentifierNotFound with default headers values
func NewDeleteAuthorityIdentifierNotFound() *DeleteAuthorityIdentifierNotFound {
	return &DeleteAuthorityIdentifierNotFound{}
}

/*
DeleteAuthorityIdentifierNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteAuthorityIdentifierNotFound struct {
	Payload string
}

// IsSuccess returns true when this delete authority identifier not found response has a 2xx status code
func (o *DeleteAuthorityIdentifierNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authority identifier not found response has a 3xx status code
func (o *DeleteAuthorityIdentifierNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authority identifier not found response has a 4xx status code
func (o *DeleteAuthorityIdentifierNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authority identifier not found response has a 5xx status code
func (o *DeleteAuthorityIdentifierNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authority identifier not found response a status code equal to that given
func (o *DeleteAuthorityIdentifierNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete authority identifier not found response
func (o *DeleteAuthorityIdentifierNotFound) Code() int {
	return 404
}

func (o *DeleteAuthorityIdentifierNotFound) Error() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAuthorityIdentifierNotFound) String() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAuthorityIdentifierNotFound) GetPayload() string {
	return o.Payload
}

func (o *DeleteAuthorityIdentifierNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorityIdentifierConflict creates a DeleteAuthorityIdentifierConflict with default headers values
func NewDeleteAuthorityIdentifierConflict() *DeleteAuthorityIdentifierConflict {
	return &DeleteAuthorityIdentifierConflict{}
}

/*
DeleteAuthorityIdentifierConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteAuthorityIdentifierConflict struct {
	Payload string
}

// IsSuccess returns true when this delete authority identifier conflict response has a 2xx status code
func (o *DeleteAuthorityIdentifierConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authority identifier conflict response has a 3xx status code
func (o *DeleteAuthorityIdentifierConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authority identifier conflict response has a 4xx status code
func (o *DeleteAuthorityIdentifierConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authority identifier conflict response has a 5xx status code
func (o *DeleteAuthorityIdentifierConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authority identifier conflict response a status code equal to that given
func (o *DeleteAuthorityIdentifierConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete authority identifier conflict response
func (o *DeleteAuthorityIdentifierConflict) Code() int {
	return 409
}

func (o *DeleteAuthorityIdentifierConflict) Error() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierConflict  %+v", 409, o.Payload)
}

func (o *DeleteAuthorityIdentifierConflict) String() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierConflict  %+v", 409, o.Payload)
}

func (o *DeleteAuthorityIdentifierConflict) GetPayload() string {
	return o.Payload
}

func (o *DeleteAuthorityIdentifierConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorityIdentifierPreconditionFailed creates a DeleteAuthorityIdentifierPreconditionFailed with default headers values
func NewDeleteAuthorityIdentifierPreconditionFailed() *DeleteAuthorityIdentifierPreconditionFailed {
	return &DeleteAuthorityIdentifierPreconditionFailed{}
}

/*
DeleteAuthorityIdentifierPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type DeleteAuthorityIdentifierPreconditionFailed struct {
	Payload string
}

// IsSuccess returns true when this delete authority identifier precondition failed response has a 2xx status code
func (o *DeleteAuthorityIdentifierPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authority identifier precondition failed response has a 3xx status code
func (o *DeleteAuthorityIdentifierPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authority identifier precondition failed response has a 4xx status code
func (o *DeleteAuthorityIdentifierPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authority identifier precondition failed response has a 5xx status code
func (o *DeleteAuthorityIdentifierPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authority identifier precondition failed response a status code equal to that given
func (o *DeleteAuthorityIdentifierPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the delete authority identifier precondition failed response
func (o *DeleteAuthorityIdentifierPreconditionFailed) Code() int {
	return 412
}

func (o *DeleteAuthorityIdentifierPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteAuthorityIdentifierPreconditionFailed) String() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteAuthorityIdentifierPreconditionFailed) GetPayload() string {
	return o.Payload
}

func (o *DeleteAuthorityIdentifierPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorityIdentifierInternalServerError creates a DeleteAuthorityIdentifierInternalServerError with default headers values
func NewDeleteAuthorityIdentifierInternalServerError() *DeleteAuthorityIdentifierInternalServerError {
	return &DeleteAuthorityIdentifierInternalServerError{}
}

/*
DeleteAuthorityIdentifierInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAuthorityIdentifierInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this delete authority identifier internal server error response has a 2xx status code
func (o *DeleteAuthorityIdentifierInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authority identifier internal server error response has a 3xx status code
func (o *DeleteAuthorityIdentifierInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authority identifier internal server error response has a 4xx status code
func (o *DeleteAuthorityIdentifierInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete authority identifier internal server error response has a 5xx status code
func (o *DeleteAuthorityIdentifierInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete authority identifier internal server error response a status code equal to that given
func (o *DeleteAuthorityIdentifierInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete authority identifier internal server error response
func (o *DeleteAuthorityIdentifierInternalServerError) Code() int {
	return 500
}

func (o *DeleteAuthorityIdentifierInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAuthorityIdentifierInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /authority/{identifier}][%d] deleteAuthorityIdentifierInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAuthorityIdentifierInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *DeleteAuthorityIdentifierInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
