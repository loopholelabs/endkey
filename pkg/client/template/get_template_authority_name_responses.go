// Code generated by go-swagger; DO NOT EDIT.

package template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/endkey/pkg/client/models"
)

// GetTemplateAuthorityNameReader is a Reader for the GetTemplateAuthorityName structure.
type GetTemplateAuthorityNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTemplateAuthorityNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTemplateAuthorityNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTemplateAuthorityNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTemplateAuthorityNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTemplateAuthorityNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetTemplateAuthorityNameConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewGetTemplateAuthorityNamePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTemplateAuthorityNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /template/{authority_name}] GetTemplateAuthorityName", response, response.Code())
	}
}

// NewGetTemplateAuthorityNameOK creates a GetTemplateAuthorityNameOK with default headers values
func NewGetTemplateAuthorityNameOK() *GetTemplateAuthorityNameOK {
	return &GetTemplateAuthorityNameOK{}
}

/*
GetTemplateAuthorityNameOK describes a response with status code 200, with default header values.

OK
*/
type GetTemplateAuthorityNameOK struct {
	Payload []*models.ModelsTemplateResponse
}

// IsSuccess returns true when this get template authority name o k response has a 2xx status code
func (o *GetTemplateAuthorityNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get template authority name o k response has a 3xx status code
func (o *GetTemplateAuthorityNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template authority name o k response has a 4xx status code
func (o *GetTemplateAuthorityNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get template authority name o k response has a 5xx status code
func (o *GetTemplateAuthorityNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get template authority name o k response a status code equal to that given
func (o *GetTemplateAuthorityNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get template authority name o k response
func (o *GetTemplateAuthorityNameOK) Code() int {
	return 200
}

func (o *GetTemplateAuthorityNameOK) Error() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameOK  %+v", 200, o.Payload)
}

func (o *GetTemplateAuthorityNameOK) String() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameOK  %+v", 200, o.Payload)
}

func (o *GetTemplateAuthorityNameOK) GetPayload() []*models.ModelsTemplateResponse {
	return o.Payload
}

func (o *GetTemplateAuthorityNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateAuthorityNameBadRequest creates a GetTemplateAuthorityNameBadRequest with default headers values
func NewGetTemplateAuthorityNameBadRequest() *GetTemplateAuthorityNameBadRequest {
	return &GetTemplateAuthorityNameBadRequest{}
}

/*
GetTemplateAuthorityNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTemplateAuthorityNameBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get template authority name bad request response has a 2xx status code
func (o *GetTemplateAuthorityNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template authority name bad request response has a 3xx status code
func (o *GetTemplateAuthorityNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template authority name bad request response has a 4xx status code
func (o *GetTemplateAuthorityNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get template authority name bad request response has a 5xx status code
func (o *GetTemplateAuthorityNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get template authority name bad request response a status code equal to that given
func (o *GetTemplateAuthorityNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get template authority name bad request response
func (o *GetTemplateAuthorityNameBadRequest) Code() int {
	return 400
}

func (o *GetTemplateAuthorityNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameBadRequest  %+v", 400, o.Payload)
}

func (o *GetTemplateAuthorityNameBadRequest) String() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameBadRequest  %+v", 400, o.Payload)
}

func (o *GetTemplateAuthorityNameBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetTemplateAuthorityNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateAuthorityNameUnauthorized creates a GetTemplateAuthorityNameUnauthorized with default headers values
func NewGetTemplateAuthorityNameUnauthorized() *GetTemplateAuthorityNameUnauthorized {
	return &GetTemplateAuthorityNameUnauthorized{}
}

/*
GetTemplateAuthorityNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTemplateAuthorityNameUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this get template authority name unauthorized response has a 2xx status code
func (o *GetTemplateAuthorityNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template authority name unauthorized response has a 3xx status code
func (o *GetTemplateAuthorityNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template authority name unauthorized response has a 4xx status code
func (o *GetTemplateAuthorityNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get template authority name unauthorized response has a 5xx status code
func (o *GetTemplateAuthorityNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get template authority name unauthorized response a status code equal to that given
func (o *GetTemplateAuthorityNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get template authority name unauthorized response
func (o *GetTemplateAuthorityNameUnauthorized) Code() int {
	return 401
}

func (o *GetTemplateAuthorityNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTemplateAuthorityNameUnauthorized) String() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTemplateAuthorityNameUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *GetTemplateAuthorityNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateAuthorityNameNotFound creates a GetTemplateAuthorityNameNotFound with default headers values
func NewGetTemplateAuthorityNameNotFound() *GetTemplateAuthorityNameNotFound {
	return &GetTemplateAuthorityNameNotFound{}
}

/*
GetTemplateAuthorityNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTemplateAuthorityNameNotFound struct {
	Payload string
}

// IsSuccess returns true when this get template authority name not found response has a 2xx status code
func (o *GetTemplateAuthorityNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template authority name not found response has a 3xx status code
func (o *GetTemplateAuthorityNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template authority name not found response has a 4xx status code
func (o *GetTemplateAuthorityNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get template authority name not found response has a 5xx status code
func (o *GetTemplateAuthorityNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get template authority name not found response a status code equal to that given
func (o *GetTemplateAuthorityNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get template authority name not found response
func (o *GetTemplateAuthorityNameNotFound) Code() int {
	return 404
}

func (o *GetTemplateAuthorityNameNotFound) Error() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameNotFound  %+v", 404, o.Payload)
}

func (o *GetTemplateAuthorityNameNotFound) String() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameNotFound  %+v", 404, o.Payload)
}

func (o *GetTemplateAuthorityNameNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetTemplateAuthorityNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateAuthorityNameConflict creates a GetTemplateAuthorityNameConflict with default headers values
func NewGetTemplateAuthorityNameConflict() *GetTemplateAuthorityNameConflict {
	return &GetTemplateAuthorityNameConflict{}
}

/*
GetTemplateAuthorityNameConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetTemplateAuthorityNameConflict struct {
	Payload string
}

// IsSuccess returns true when this get template authority name conflict response has a 2xx status code
func (o *GetTemplateAuthorityNameConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template authority name conflict response has a 3xx status code
func (o *GetTemplateAuthorityNameConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template authority name conflict response has a 4xx status code
func (o *GetTemplateAuthorityNameConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get template authority name conflict response has a 5xx status code
func (o *GetTemplateAuthorityNameConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get template authority name conflict response a status code equal to that given
func (o *GetTemplateAuthorityNameConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get template authority name conflict response
func (o *GetTemplateAuthorityNameConflict) Code() int {
	return 409
}

func (o *GetTemplateAuthorityNameConflict) Error() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameConflict  %+v", 409, o.Payload)
}

func (o *GetTemplateAuthorityNameConflict) String() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameConflict  %+v", 409, o.Payload)
}

func (o *GetTemplateAuthorityNameConflict) GetPayload() string {
	return o.Payload
}

func (o *GetTemplateAuthorityNameConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateAuthorityNamePreconditionFailed creates a GetTemplateAuthorityNamePreconditionFailed with default headers values
func NewGetTemplateAuthorityNamePreconditionFailed() *GetTemplateAuthorityNamePreconditionFailed {
	return &GetTemplateAuthorityNamePreconditionFailed{}
}

/*
GetTemplateAuthorityNamePreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type GetTemplateAuthorityNamePreconditionFailed struct {
	Payload string
}

// IsSuccess returns true when this get template authority name precondition failed response has a 2xx status code
func (o *GetTemplateAuthorityNamePreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template authority name precondition failed response has a 3xx status code
func (o *GetTemplateAuthorityNamePreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template authority name precondition failed response has a 4xx status code
func (o *GetTemplateAuthorityNamePreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get template authority name precondition failed response has a 5xx status code
func (o *GetTemplateAuthorityNamePreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this get template authority name precondition failed response a status code equal to that given
func (o *GetTemplateAuthorityNamePreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the get template authority name precondition failed response
func (o *GetTemplateAuthorityNamePreconditionFailed) Code() int {
	return 412
}

func (o *GetTemplateAuthorityNamePreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNamePreconditionFailed  %+v", 412, o.Payload)
}

func (o *GetTemplateAuthorityNamePreconditionFailed) String() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNamePreconditionFailed  %+v", 412, o.Payload)
}

func (o *GetTemplateAuthorityNamePreconditionFailed) GetPayload() string {
	return o.Payload
}

func (o *GetTemplateAuthorityNamePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateAuthorityNameInternalServerError creates a GetTemplateAuthorityNameInternalServerError with default headers values
func NewGetTemplateAuthorityNameInternalServerError() *GetTemplateAuthorityNameInternalServerError {
	return &GetTemplateAuthorityNameInternalServerError{}
}

/*
GetTemplateAuthorityNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetTemplateAuthorityNameInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get template authority name internal server error response has a 2xx status code
func (o *GetTemplateAuthorityNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template authority name internal server error response has a 3xx status code
func (o *GetTemplateAuthorityNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template authority name internal server error response has a 4xx status code
func (o *GetTemplateAuthorityNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get template authority name internal server error response has a 5xx status code
func (o *GetTemplateAuthorityNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get template authority name internal server error response a status code equal to that given
func (o *GetTemplateAuthorityNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get template authority name internal server error response
func (o *GetTemplateAuthorityNameInternalServerError) Code() int {
	return 500
}

func (o *GetTemplateAuthorityNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTemplateAuthorityNameInternalServerError) String() string {
	return fmt.Sprintf("[GET /template/{authority_name}][%d] getTemplateAuthorityNameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTemplateAuthorityNameInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetTemplateAuthorityNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
