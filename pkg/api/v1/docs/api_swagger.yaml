basePath: /v1
consumes:
- application/json
definitions:
  models.APIKeyResponse:
    properties:
      authority_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      secret:
        type: string
      template_kind:
        type: string
      template_name:
        type: string
    type: object
  models.AuthorityResponse:
    properties:
      ca_certificate:
        format: base64
        type: string
      common_name:
        type: string
      created_at:
        type: string
      expiry:
        type: string
      id:
        type: string
      name:
        type: string
      tag:
        type: string
    type: object
  models.CAResponse:
    properties:
      authority_name:
        type: string
      ca_certificate:
        format: base64
        type: string
    type: object
  models.CertificateResponse:
    properties:
      additional_dns_names:
        items:
          type: string
        type: array
      additional_ip_addresses:
        items:
          type: string
        type: array
      authority_name:
        type: string
      ca_certificate:
        format: base64
        type: string
      expiry:
        type: string
      public_certificate:
        format: base64
        type: string
      template_kind:
        type: string
      template_name:
        type: string
    type: object
  models.ClientTemplateResponse:
    properties:
      allow_additional_dns_names:
        type: boolean
      allow_additional_ips:
        type: boolean
      authority_name:
        type: string
      common_name:
        type: string
      created_at:
        type: string
      dns_names:
        items:
          type: string
        type: array
      id:
        type: string
      ip_addresses:
        items:
          type: string
        type: array
      name:
        type: string
      tag:
        type: string
      validity:
        type: string
    type: object
  models.CreateAPIKeyRequest:
    properties:
      authority_name:
        type: string
      name:
        type: string
      template_kind:
        type: string
      template_name:
        type: string
    type: object
  models.CreateAuthorityRequest:
    properties:
      common_name:
        type: string
      name:
        type: string
      tag:
        type: string
      validity:
        type: string
    type: object
  models.CreateCertificateRequest:
    properties:
      additional_dns_names:
        items:
          type: string
        type: array
      additional_ip_addresses:
        items:
          type: string
        type: array
      csr:
        format: base64
        type: string
    type: object
  models.CreateClientTemplateRequest:
    properties:
      allow_additional_dns_names:
        type: boolean
      allow_additional_ips:
        type: boolean
      authority_name:
        type: string
      common_name:
        type: string
      dns_names:
        items:
          type: string
        type: array
      ip_addresses:
        items:
          type: string
        type: array
      name:
        type: string
      tag:
        type: string
      validity:
        type: string
    type: object
  models.CreateServerTemplateRequest:
    properties:
      allow_additional_dns_names:
        type: boolean
      allow_additional_ips:
        type: boolean
      authority_name:
        type: string
      common_name:
        type: string
      dns_names:
        items:
          type: string
        type: array
      ip_addresses:
        items:
          type: string
        type: array
      name:
        type: string
      tag:
        type: string
      validity:
        type: string
    type: object
  models.DeleteAPIKeyRequest:
    properties:
      authority_name:
        type: string
      name:
        type: string
    type: object
  models.DeleteClientTemplateRequest:
    properties:
      authority_name:
        type: string
      name:
        type: string
    type: object
  models.DeleteServerTemplateRequest:
    properties:
      authority_name:
        type: string
      name:
        type: string
    type: object
  models.HealthResponse:
    properties:
      database:
        type: boolean
    type: object
  models.RootKeyResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      secret:
        type: string
    type: object
  models.ServerTemplateResponse:
    properties:
      allow_additional_dns_names:
        type: boolean
      allow_additional_ips:
        type: boolean
      authority_name:
        type: string
      common_name:
        type: string
      created_at:
        type: string
      dns_names:
        items:
          type: string
        type: array
      id:
        type: string
      ip_addresses:
        items:
          type: string
        type: array
      name:
        type: string
      tag:
        type: string
      validity:
        type: string
    type: object
  models.UserKeyResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      secret:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: admin@loopholelabs.io
    name: API Support
  description: Returns the health and status of the various services that make up
    the API.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://loopholelabs.io/privacy
  title: EndKey API V1
  version: "1.0"
paths:
  /apikey:
    delete:
      consumes:
      - application/json
      description: Delete an API Key
      parameters:
      - description: Delete API Key Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DeleteAPIKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - apikey
    post:
      consumes:
      - application/json
      description: Create a new API Key for a given Authority
      parameters:
      - description: Create API Key Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIKeyResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - apikey
  /apikey/{authority_name}:
    get:
      consumes:
      - application/json
      description: Lists all the api keys
      parameters:
      - description: Authority Name
        in: path
        name: authority_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.APIKeyResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - apikey
  /authority:
    get:
      consumes:
      - application/json
      description: List authorities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AuthorityResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - authority
    post:
      consumes:
      - application/json
      description: Create a new Authority
      parameters:
      - description: Create Authority Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateAuthorityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthorityResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - authority
  /authority/{name}:
    delete:
      consumes:
      - application/json
      description: Delete an authority
      parameters:
      - description: Authority Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - authority
    get:
      consumes:
      - application/json
      description: Get an authority
      parameters:
      - description: Authority Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthorityResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - authority
  /certificate:
    get:
      consumes:
      - application/json
      description: Retrieves the CA Certificate
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CAResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - certificate
    post:
      consumes:
      - application/json
      description: Create a new Certificate
      parameters:
      - description: Create Certificate Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateCertificateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CertificateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - certificate
  /health:
    get:
      consumes:
      - application/json
      description: Returns the health and status of the various services that make
        up the API.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HealthResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - health
  /rootkey:
    get:
      consumes:
      - application/json
      description: Lists all the root keys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RootKeyResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - rootkey
  /rootkey/{name}:
    delete:
      consumes:
      - application/json
      description: Delete a Root Key
      parameters:
      - description: Root Key Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - rootkey
    post:
      consumes:
      - application/json
      description: Create a new Root Key
      parameters:
      - description: Root Key Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RootKeyResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - rootkey
  /rootkey/rotate/{name}:
    post:
      consumes:
      - application/json
      description: Rotates a given Root Key
      parameters:
      - description: Root Key Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RootKeyResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - rootkey
  /template/client:
    delete:
      consumes:
      - application/json
      description: Delete a Client Template
      parameters:
      - description: Delete Client Template Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DeleteClientTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - template
    post:
      consumes:
      - application/json
      description: Create a new Client Template
      parameters:
      - description: Create Client Template Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateClientTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ClientTemplateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - template
  /template/client/{authority_name}:
    get:
      consumes:
      - application/json
      description: List all Client Templates
      parameters:
      - description: Authority Name
        in: path
        name: authority_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ClientTemplateResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - template
  /template/server:
    delete:
      consumes:
      - application/json
      description: Delete a Server Template
      parameters:
      - description: Delete Server Template Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DeleteServerTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - template
    post:
      consumes:
      - application/json
      description: Create a new Server Template
      parameters:
      - description: Create Server Template Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateServerTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ServerTemplateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - template
  /template/server/{authority_name}:
    get:
      consumes:
      - application/json
      description: List all Server Templates
      parameters:
      - description: Authority Name
        in: path
        name: authority_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ServerTemplateResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - template
  /userkey:
    get:
      consumes:
      - application/json
      description: Lists all the User Keys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserKeyResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - userkey
  /userkey/{name}:
    delete:
      consumes:
      - application/json
      description: Delete a User Key
      parameters:
      - description: User Key Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - userkey
    post:
      consumes:
      - application/json
      description: Create a new User Key
      parameters:
      - description: User Key Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserKeyResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - userkey
  /userkey/rotate/{name}:
    post:
      consumes:
      - application/json
      description: Rotates a given User Key
      parameters:
      - description: User Key Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserKeyResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "412":
          description: Precondition Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - userkey
produces:
- application/json
schemes:
- https
swagger: "2.0"
