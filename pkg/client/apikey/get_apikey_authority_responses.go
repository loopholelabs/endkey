// Code generated by go-swagger; DO NOT EDIT.

package apikey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/endkey/pkg/client/models"
)

// GetApikeyAuthorityReader is a Reader for the GetApikeyAuthority structure.
type GetApikeyAuthorityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApikeyAuthorityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApikeyAuthorityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetApikeyAuthorityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetApikeyAuthorityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApikeyAuthorityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetApikeyAuthorityConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewGetApikeyAuthorityPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetApikeyAuthorityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /apikey/{authority}] GetApikeyAuthority", response, response.Code())
	}
}

// NewGetApikeyAuthorityOK creates a GetApikeyAuthorityOK with default headers values
func NewGetApikeyAuthorityOK() *GetApikeyAuthorityOK {
	return &GetApikeyAuthorityOK{}
}

/*
GetApikeyAuthorityOK describes a response with status code 200, with default header values.

OK
*/
type GetApikeyAuthorityOK struct {
	Payload []*models.ModelsAPIKeyResponse
}

// IsSuccess returns true when this get apikey authority o k response has a 2xx status code
func (o *GetApikeyAuthorityOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get apikey authority o k response has a 3xx status code
func (o *GetApikeyAuthorityOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apikey authority o k response has a 4xx status code
func (o *GetApikeyAuthorityOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get apikey authority o k response has a 5xx status code
func (o *GetApikeyAuthorityOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get apikey authority o k response a status code equal to that given
func (o *GetApikeyAuthorityOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get apikey authority o k response
func (o *GetApikeyAuthorityOK) Code() int {
	return 200
}

func (o *GetApikeyAuthorityOK) Error() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityOK  %+v", 200, o.Payload)
}

func (o *GetApikeyAuthorityOK) String() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityOK  %+v", 200, o.Payload)
}

func (o *GetApikeyAuthorityOK) GetPayload() []*models.ModelsAPIKeyResponse {
	return o.Payload
}

func (o *GetApikeyAuthorityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApikeyAuthorityBadRequest creates a GetApikeyAuthorityBadRequest with default headers values
func NewGetApikeyAuthorityBadRequest() *GetApikeyAuthorityBadRequest {
	return &GetApikeyAuthorityBadRequest{}
}

/*
GetApikeyAuthorityBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetApikeyAuthorityBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get apikey authority bad request response has a 2xx status code
func (o *GetApikeyAuthorityBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apikey authority bad request response has a 3xx status code
func (o *GetApikeyAuthorityBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apikey authority bad request response has a 4xx status code
func (o *GetApikeyAuthorityBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apikey authority bad request response has a 5xx status code
func (o *GetApikeyAuthorityBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get apikey authority bad request response a status code equal to that given
func (o *GetApikeyAuthorityBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get apikey authority bad request response
func (o *GetApikeyAuthorityBadRequest) Code() int {
	return 400
}

func (o *GetApikeyAuthorityBadRequest) Error() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityBadRequest  %+v", 400, o.Payload)
}

func (o *GetApikeyAuthorityBadRequest) String() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityBadRequest  %+v", 400, o.Payload)
}

func (o *GetApikeyAuthorityBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetApikeyAuthorityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApikeyAuthorityUnauthorized creates a GetApikeyAuthorityUnauthorized with default headers values
func NewGetApikeyAuthorityUnauthorized() *GetApikeyAuthorityUnauthorized {
	return &GetApikeyAuthorityUnauthorized{}
}

/*
GetApikeyAuthorityUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetApikeyAuthorityUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this get apikey authority unauthorized response has a 2xx status code
func (o *GetApikeyAuthorityUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apikey authority unauthorized response has a 3xx status code
func (o *GetApikeyAuthorityUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apikey authority unauthorized response has a 4xx status code
func (o *GetApikeyAuthorityUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apikey authority unauthorized response has a 5xx status code
func (o *GetApikeyAuthorityUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get apikey authority unauthorized response a status code equal to that given
func (o *GetApikeyAuthorityUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get apikey authority unauthorized response
func (o *GetApikeyAuthorityUnauthorized) Code() int {
	return 401
}

func (o *GetApikeyAuthorityUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityUnauthorized  %+v", 401, o.Payload)
}

func (o *GetApikeyAuthorityUnauthorized) String() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityUnauthorized  %+v", 401, o.Payload)
}

func (o *GetApikeyAuthorityUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *GetApikeyAuthorityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApikeyAuthorityNotFound creates a GetApikeyAuthorityNotFound with default headers values
func NewGetApikeyAuthorityNotFound() *GetApikeyAuthorityNotFound {
	return &GetApikeyAuthorityNotFound{}
}

/*
GetApikeyAuthorityNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApikeyAuthorityNotFound struct {
	Payload string
}

// IsSuccess returns true when this get apikey authority not found response has a 2xx status code
func (o *GetApikeyAuthorityNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apikey authority not found response has a 3xx status code
func (o *GetApikeyAuthorityNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apikey authority not found response has a 4xx status code
func (o *GetApikeyAuthorityNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apikey authority not found response has a 5xx status code
func (o *GetApikeyAuthorityNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get apikey authority not found response a status code equal to that given
func (o *GetApikeyAuthorityNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get apikey authority not found response
func (o *GetApikeyAuthorityNotFound) Code() int {
	return 404
}

func (o *GetApikeyAuthorityNotFound) Error() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityNotFound  %+v", 404, o.Payload)
}

func (o *GetApikeyAuthorityNotFound) String() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityNotFound  %+v", 404, o.Payload)
}

func (o *GetApikeyAuthorityNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetApikeyAuthorityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApikeyAuthorityConflict creates a GetApikeyAuthorityConflict with default headers values
func NewGetApikeyAuthorityConflict() *GetApikeyAuthorityConflict {
	return &GetApikeyAuthorityConflict{}
}

/*
GetApikeyAuthorityConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetApikeyAuthorityConflict struct {
	Payload string
}

// IsSuccess returns true when this get apikey authority conflict response has a 2xx status code
func (o *GetApikeyAuthorityConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apikey authority conflict response has a 3xx status code
func (o *GetApikeyAuthorityConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apikey authority conflict response has a 4xx status code
func (o *GetApikeyAuthorityConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apikey authority conflict response has a 5xx status code
func (o *GetApikeyAuthorityConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get apikey authority conflict response a status code equal to that given
func (o *GetApikeyAuthorityConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get apikey authority conflict response
func (o *GetApikeyAuthorityConflict) Code() int {
	return 409
}

func (o *GetApikeyAuthorityConflict) Error() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityConflict  %+v", 409, o.Payload)
}

func (o *GetApikeyAuthorityConflict) String() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityConflict  %+v", 409, o.Payload)
}

func (o *GetApikeyAuthorityConflict) GetPayload() string {
	return o.Payload
}

func (o *GetApikeyAuthorityConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApikeyAuthorityPreconditionFailed creates a GetApikeyAuthorityPreconditionFailed with default headers values
func NewGetApikeyAuthorityPreconditionFailed() *GetApikeyAuthorityPreconditionFailed {
	return &GetApikeyAuthorityPreconditionFailed{}
}

/*
GetApikeyAuthorityPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type GetApikeyAuthorityPreconditionFailed struct {
	Payload string
}

// IsSuccess returns true when this get apikey authority precondition failed response has a 2xx status code
func (o *GetApikeyAuthorityPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apikey authority precondition failed response has a 3xx status code
func (o *GetApikeyAuthorityPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apikey authority precondition failed response has a 4xx status code
func (o *GetApikeyAuthorityPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apikey authority precondition failed response has a 5xx status code
func (o *GetApikeyAuthorityPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this get apikey authority precondition failed response a status code equal to that given
func (o *GetApikeyAuthorityPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the get apikey authority precondition failed response
func (o *GetApikeyAuthorityPreconditionFailed) Code() int {
	return 412
}

func (o *GetApikeyAuthorityPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityPreconditionFailed  %+v", 412, o.Payload)
}

func (o *GetApikeyAuthorityPreconditionFailed) String() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityPreconditionFailed  %+v", 412, o.Payload)
}

func (o *GetApikeyAuthorityPreconditionFailed) GetPayload() string {
	return o.Payload
}

func (o *GetApikeyAuthorityPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApikeyAuthorityInternalServerError creates a GetApikeyAuthorityInternalServerError with default headers values
func NewGetApikeyAuthorityInternalServerError() *GetApikeyAuthorityInternalServerError {
	return &GetApikeyAuthorityInternalServerError{}
}

/*
GetApikeyAuthorityInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetApikeyAuthorityInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get apikey authority internal server error response has a 2xx status code
func (o *GetApikeyAuthorityInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apikey authority internal server error response has a 3xx status code
func (o *GetApikeyAuthorityInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apikey authority internal server error response has a 4xx status code
func (o *GetApikeyAuthorityInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get apikey authority internal server error response has a 5xx status code
func (o *GetApikeyAuthorityInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get apikey authority internal server error response a status code equal to that given
func (o *GetApikeyAuthorityInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get apikey authority internal server error response
func (o *GetApikeyAuthorityInternalServerError) Code() int {
	return 500
}

func (o *GetApikeyAuthorityInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityInternalServerError  %+v", 500, o.Payload)
}

func (o *GetApikeyAuthorityInternalServerError) String() string {
	return fmt.Sprintf("[GET /apikey/{authority}][%d] getApikeyAuthorityInternalServerError  %+v", 500, o.Payload)
}

func (o *GetApikeyAuthorityInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetApikeyAuthorityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
