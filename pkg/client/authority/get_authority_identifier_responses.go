// Code generated by go-swagger; DO NOT EDIT.

package authority

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/endkey/pkg/client/models"
)

// GetAuthorityIdentifierReader is a Reader for the GetAuthorityIdentifier structure.
type GetAuthorityIdentifierReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthorityIdentifierReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthorityIdentifierOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthorityIdentifierBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuthorityIdentifierUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuthorityIdentifierNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAuthorityIdentifierConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewGetAuthorityIdentifierPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthorityIdentifierInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /authority/{identifier}] GetAuthorityIdentifier", response, response.Code())
	}
}

// NewGetAuthorityIdentifierOK creates a GetAuthorityIdentifierOK with default headers values
func NewGetAuthorityIdentifierOK() *GetAuthorityIdentifierOK {
	return &GetAuthorityIdentifierOK{}
}

/*
GetAuthorityIdentifierOK describes a response with status code 200, with default header values.

OK
*/
type GetAuthorityIdentifierOK struct {
	Payload *models.ModelsAuthorityResponse
}

// IsSuccess returns true when this get authority identifier o k response has a 2xx status code
func (o *GetAuthorityIdentifierOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get authority identifier o k response has a 3xx status code
func (o *GetAuthorityIdentifierOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authority identifier o k response has a 4xx status code
func (o *GetAuthorityIdentifierOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authority identifier o k response has a 5xx status code
func (o *GetAuthorityIdentifierOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get authority identifier o k response a status code equal to that given
func (o *GetAuthorityIdentifierOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get authority identifier o k response
func (o *GetAuthorityIdentifierOK) Code() int {
	return 200
}

func (o *GetAuthorityIdentifierOK) Error() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierOK  %+v", 200, o.Payload)
}

func (o *GetAuthorityIdentifierOK) String() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierOK  %+v", 200, o.Payload)
}

func (o *GetAuthorityIdentifierOK) GetPayload() *models.ModelsAuthorityResponse {
	return o.Payload
}

func (o *GetAuthorityIdentifierOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsAuthorityResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorityIdentifierBadRequest creates a GetAuthorityIdentifierBadRequest with default headers values
func NewGetAuthorityIdentifierBadRequest() *GetAuthorityIdentifierBadRequest {
	return &GetAuthorityIdentifierBadRequest{}
}

/*
GetAuthorityIdentifierBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAuthorityIdentifierBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get authority identifier bad request response has a 2xx status code
func (o *GetAuthorityIdentifierBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authority identifier bad request response has a 3xx status code
func (o *GetAuthorityIdentifierBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authority identifier bad request response has a 4xx status code
func (o *GetAuthorityIdentifierBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authority identifier bad request response has a 5xx status code
func (o *GetAuthorityIdentifierBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get authority identifier bad request response a status code equal to that given
func (o *GetAuthorityIdentifierBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get authority identifier bad request response
func (o *GetAuthorityIdentifierBadRequest) Code() int {
	return 400
}

func (o *GetAuthorityIdentifierBadRequest) Error() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorityIdentifierBadRequest) String() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthorityIdentifierBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetAuthorityIdentifierBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorityIdentifierUnauthorized creates a GetAuthorityIdentifierUnauthorized with default headers values
func NewGetAuthorityIdentifierUnauthorized() *GetAuthorityIdentifierUnauthorized {
	return &GetAuthorityIdentifierUnauthorized{}
}

/*
GetAuthorityIdentifierUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAuthorityIdentifierUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this get authority identifier unauthorized response has a 2xx status code
func (o *GetAuthorityIdentifierUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authority identifier unauthorized response has a 3xx status code
func (o *GetAuthorityIdentifierUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authority identifier unauthorized response has a 4xx status code
func (o *GetAuthorityIdentifierUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authority identifier unauthorized response has a 5xx status code
func (o *GetAuthorityIdentifierUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get authority identifier unauthorized response a status code equal to that given
func (o *GetAuthorityIdentifierUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get authority identifier unauthorized response
func (o *GetAuthorityIdentifierUnauthorized) Code() int {
	return 401
}

func (o *GetAuthorityIdentifierUnauthorized) Error() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorityIdentifierUnauthorized) String() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthorityIdentifierUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *GetAuthorityIdentifierUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorityIdentifierNotFound creates a GetAuthorityIdentifierNotFound with default headers values
func NewGetAuthorityIdentifierNotFound() *GetAuthorityIdentifierNotFound {
	return &GetAuthorityIdentifierNotFound{}
}

/*
GetAuthorityIdentifierNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAuthorityIdentifierNotFound struct {
	Payload string
}

// IsSuccess returns true when this get authority identifier not found response has a 2xx status code
func (o *GetAuthorityIdentifierNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authority identifier not found response has a 3xx status code
func (o *GetAuthorityIdentifierNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authority identifier not found response has a 4xx status code
func (o *GetAuthorityIdentifierNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authority identifier not found response has a 5xx status code
func (o *GetAuthorityIdentifierNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get authority identifier not found response a status code equal to that given
func (o *GetAuthorityIdentifierNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get authority identifier not found response
func (o *GetAuthorityIdentifierNotFound) Code() int {
	return 404
}

func (o *GetAuthorityIdentifierNotFound) Error() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorityIdentifierNotFound) String() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthorityIdentifierNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetAuthorityIdentifierNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorityIdentifierConflict creates a GetAuthorityIdentifierConflict with default headers values
func NewGetAuthorityIdentifierConflict() *GetAuthorityIdentifierConflict {
	return &GetAuthorityIdentifierConflict{}
}

/*
GetAuthorityIdentifierConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAuthorityIdentifierConflict struct {
	Payload string
}

// IsSuccess returns true when this get authority identifier conflict response has a 2xx status code
func (o *GetAuthorityIdentifierConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authority identifier conflict response has a 3xx status code
func (o *GetAuthorityIdentifierConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authority identifier conflict response has a 4xx status code
func (o *GetAuthorityIdentifierConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authority identifier conflict response has a 5xx status code
func (o *GetAuthorityIdentifierConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get authority identifier conflict response a status code equal to that given
func (o *GetAuthorityIdentifierConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get authority identifier conflict response
func (o *GetAuthorityIdentifierConflict) Code() int {
	return 409
}

func (o *GetAuthorityIdentifierConflict) Error() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierConflict  %+v", 409, o.Payload)
}

func (o *GetAuthorityIdentifierConflict) String() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierConflict  %+v", 409, o.Payload)
}

func (o *GetAuthorityIdentifierConflict) GetPayload() string {
	return o.Payload
}

func (o *GetAuthorityIdentifierConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorityIdentifierPreconditionFailed creates a GetAuthorityIdentifierPreconditionFailed with default headers values
func NewGetAuthorityIdentifierPreconditionFailed() *GetAuthorityIdentifierPreconditionFailed {
	return &GetAuthorityIdentifierPreconditionFailed{}
}

/*
GetAuthorityIdentifierPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type GetAuthorityIdentifierPreconditionFailed struct {
	Payload string
}

// IsSuccess returns true when this get authority identifier precondition failed response has a 2xx status code
func (o *GetAuthorityIdentifierPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authority identifier precondition failed response has a 3xx status code
func (o *GetAuthorityIdentifierPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authority identifier precondition failed response has a 4xx status code
func (o *GetAuthorityIdentifierPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authority identifier precondition failed response has a 5xx status code
func (o *GetAuthorityIdentifierPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this get authority identifier precondition failed response a status code equal to that given
func (o *GetAuthorityIdentifierPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the get authority identifier precondition failed response
func (o *GetAuthorityIdentifierPreconditionFailed) Code() int {
	return 412
}

func (o *GetAuthorityIdentifierPreconditionFailed) Error() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierPreconditionFailed  %+v", 412, o.Payload)
}

func (o *GetAuthorityIdentifierPreconditionFailed) String() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierPreconditionFailed  %+v", 412, o.Payload)
}

func (o *GetAuthorityIdentifierPreconditionFailed) GetPayload() string {
	return o.Payload
}

func (o *GetAuthorityIdentifierPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorityIdentifierInternalServerError creates a GetAuthorityIdentifierInternalServerError with default headers values
func NewGetAuthorityIdentifierInternalServerError() *GetAuthorityIdentifierInternalServerError {
	return &GetAuthorityIdentifierInternalServerError{}
}

/*
GetAuthorityIdentifierInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAuthorityIdentifierInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get authority identifier internal server error response has a 2xx status code
func (o *GetAuthorityIdentifierInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authority identifier internal server error response has a 3xx status code
func (o *GetAuthorityIdentifierInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authority identifier internal server error response has a 4xx status code
func (o *GetAuthorityIdentifierInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authority identifier internal server error response has a 5xx status code
func (o *GetAuthorityIdentifierInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get authority identifier internal server error response a status code equal to that given
func (o *GetAuthorityIdentifierInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get authority identifier internal server error response
func (o *GetAuthorityIdentifierInternalServerError) Code() int {
	return 500
}

func (o *GetAuthorityIdentifierInternalServerError) Error() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorityIdentifierInternalServerError) String() string {
	return fmt.Sprintf("[GET /authority/{identifier}][%d] getAuthorityIdentifierInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthorityIdentifierInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetAuthorityIdentifierInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
