// Code generated by go-swagger; DO NOT EDIT.

package template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/endkey/pkg/client/models"
)

// PostTemplateServerReader is a Reader for the PostTemplateServer structure.
type PostTemplateServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTemplateServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostTemplateServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostTemplateServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostTemplateServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostTemplateServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostTemplateServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewPostTemplateServerPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostTemplateServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /template/server] PostTemplateServer", response, response.Code())
	}
}

// NewPostTemplateServerOK creates a PostTemplateServerOK with default headers values
func NewPostTemplateServerOK() *PostTemplateServerOK {
	return &PostTemplateServerOK{}
}

/*
PostTemplateServerOK describes a response with status code 200, with default header values.

OK
*/
type PostTemplateServerOK struct {
	Payload *models.ModelsServerTemplateResponse
}

// IsSuccess returns true when this post template server o k response has a 2xx status code
func (o *PostTemplateServerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post template server o k response has a 3xx status code
func (o *PostTemplateServerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post template server o k response has a 4xx status code
func (o *PostTemplateServerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post template server o k response has a 5xx status code
func (o *PostTemplateServerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post template server o k response a status code equal to that given
func (o *PostTemplateServerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post template server o k response
func (o *PostTemplateServerOK) Code() int {
	return 200
}

func (o *PostTemplateServerOK) Error() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerOK  %+v", 200, o.Payload)
}

func (o *PostTemplateServerOK) String() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerOK  %+v", 200, o.Payload)
}

func (o *PostTemplateServerOK) GetPayload() *models.ModelsServerTemplateResponse {
	return o.Payload
}

func (o *PostTemplateServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsServerTemplateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTemplateServerBadRequest creates a PostTemplateServerBadRequest with default headers values
func NewPostTemplateServerBadRequest() *PostTemplateServerBadRequest {
	return &PostTemplateServerBadRequest{}
}

/*
PostTemplateServerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostTemplateServerBadRequest struct {
	Payload string
}

// IsSuccess returns true when this post template server bad request response has a 2xx status code
func (o *PostTemplateServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post template server bad request response has a 3xx status code
func (o *PostTemplateServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post template server bad request response has a 4xx status code
func (o *PostTemplateServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post template server bad request response has a 5xx status code
func (o *PostTemplateServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post template server bad request response a status code equal to that given
func (o *PostTemplateServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post template server bad request response
func (o *PostTemplateServerBadRequest) Code() int {
	return 400
}

func (o *PostTemplateServerBadRequest) Error() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerBadRequest  %+v", 400, o.Payload)
}

func (o *PostTemplateServerBadRequest) String() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerBadRequest  %+v", 400, o.Payload)
}

func (o *PostTemplateServerBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PostTemplateServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTemplateServerUnauthorized creates a PostTemplateServerUnauthorized with default headers values
func NewPostTemplateServerUnauthorized() *PostTemplateServerUnauthorized {
	return &PostTemplateServerUnauthorized{}
}

/*
PostTemplateServerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostTemplateServerUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this post template server unauthorized response has a 2xx status code
func (o *PostTemplateServerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post template server unauthorized response has a 3xx status code
func (o *PostTemplateServerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post template server unauthorized response has a 4xx status code
func (o *PostTemplateServerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post template server unauthorized response has a 5xx status code
func (o *PostTemplateServerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post template server unauthorized response a status code equal to that given
func (o *PostTemplateServerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post template server unauthorized response
func (o *PostTemplateServerUnauthorized) Code() int {
	return 401
}

func (o *PostTemplateServerUnauthorized) Error() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerUnauthorized  %+v", 401, o.Payload)
}

func (o *PostTemplateServerUnauthorized) String() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerUnauthorized  %+v", 401, o.Payload)
}

func (o *PostTemplateServerUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *PostTemplateServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTemplateServerNotFound creates a PostTemplateServerNotFound with default headers values
func NewPostTemplateServerNotFound() *PostTemplateServerNotFound {
	return &PostTemplateServerNotFound{}
}

/*
PostTemplateServerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostTemplateServerNotFound struct {
	Payload string
}

// IsSuccess returns true when this post template server not found response has a 2xx status code
func (o *PostTemplateServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post template server not found response has a 3xx status code
func (o *PostTemplateServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post template server not found response has a 4xx status code
func (o *PostTemplateServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post template server not found response has a 5xx status code
func (o *PostTemplateServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post template server not found response a status code equal to that given
func (o *PostTemplateServerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post template server not found response
func (o *PostTemplateServerNotFound) Code() int {
	return 404
}

func (o *PostTemplateServerNotFound) Error() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerNotFound  %+v", 404, o.Payload)
}

func (o *PostTemplateServerNotFound) String() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerNotFound  %+v", 404, o.Payload)
}

func (o *PostTemplateServerNotFound) GetPayload() string {
	return o.Payload
}

func (o *PostTemplateServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTemplateServerConflict creates a PostTemplateServerConflict with default headers values
func NewPostTemplateServerConflict() *PostTemplateServerConflict {
	return &PostTemplateServerConflict{}
}

/*
PostTemplateServerConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostTemplateServerConflict struct {
	Payload string
}

// IsSuccess returns true when this post template server conflict response has a 2xx status code
func (o *PostTemplateServerConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post template server conflict response has a 3xx status code
func (o *PostTemplateServerConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post template server conflict response has a 4xx status code
func (o *PostTemplateServerConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post template server conflict response has a 5xx status code
func (o *PostTemplateServerConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post template server conflict response a status code equal to that given
func (o *PostTemplateServerConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the post template server conflict response
func (o *PostTemplateServerConflict) Code() int {
	return 409
}

func (o *PostTemplateServerConflict) Error() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerConflict  %+v", 409, o.Payload)
}

func (o *PostTemplateServerConflict) String() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerConflict  %+v", 409, o.Payload)
}

func (o *PostTemplateServerConflict) GetPayload() string {
	return o.Payload
}

func (o *PostTemplateServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTemplateServerPreconditionFailed creates a PostTemplateServerPreconditionFailed with default headers values
func NewPostTemplateServerPreconditionFailed() *PostTemplateServerPreconditionFailed {
	return &PostTemplateServerPreconditionFailed{}
}

/*
PostTemplateServerPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type PostTemplateServerPreconditionFailed struct {
	Payload string
}

// IsSuccess returns true when this post template server precondition failed response has a 2xx status code
func (o *PostTemplateServerPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post template server precondition failed response has a 3xx status code
func (o *PostTemplateServerPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post template server precondition failed response has a 4xx status code
func (o *PostTemplateServerPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this post template server precondition failed response has a 5xx status code
func (o *PostTemplateServerPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this post template server precondition failed response a status code equal to that given
func (o *PostTemplateServerPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the post template server precondition failed response
func (o *PostTemplateServerPreconditionFailed) Code() int {
	return 412
}

func (o *PostTemplateServerPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerPreconditionFailed  %+v", 412, o.Payload)
}

func (o *PostTemplateServerPreconditionFailed) String() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerPreconditionFailed  %+v", 412, o.Payload)
}

func (o *PostTemplateServerPreconditionFailed) GetPayload() string {
	return o.Payload
}

func (o *PostTemplateServerPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTemplateServerInternalServerError creates a PostTemplateServerInternalServerError with default headers values
func NewPostTemplateServerInternalServerError() *PostTemplateServerInternalServerError {
	return &PostTemplateServerInternalServerError{}
}

/*
PostTemplateServerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostTemplateServerInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this post template server internal server error response has a 2xx status code
func (o *PostTemplateServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post template server internal server error response has a 3xx status code
func (o *PostTemplateServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post template server internal server error response has a 4xx status code
func (o *PostTemplateServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post template server internal server error response has a 5xx status code
func (o *PostTemplateServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post template server internal server error response a status code equal to that given
func (o *PostTemplateServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post template server internal server error response
func (o *PostTemplateServerInternalServerError) Code() int {
	return 500
}

func (o *PostTemplateServerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTemplateServerInternalServerError) String() string {
	return fmt.Sprintf("[POST /template/server][%d] postTemplateServerInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTemplateServerInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PostTemplateServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
