// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/loopholelabs/endkey/internal/ent/apikey"
	"github.com/loopholelabs/endkey/internal/ent/authority"
	"github.com/loopholelabs/endkey/internal/ent/clienttemplate"
	"github.com/loopholelabs/endkey/internal/ent/rootkey"
	"github.com/loopholelabs/endkey/internal/ent/schema"
	"github.com/loopholelabs/endkey/internal/ent/servertemplate"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	apikeyFields := schema.APIKey{}.Fields()
	_ = apikeyFields
	// apikeyDescCreatedAt is the schema descriptor for created_at field.
	apikeyDescCreatedAt := apikeyFields[0].Descriptor()
	// apikey.DefaultCreatedAt holds the default value on creation for the created_at field.
	apikey.DefaultCreatedAt = apikeyDescCreatedAt.Default.(func() time.Time)
	// apikeyDescIdentifier is the schema descriptor for identifier field.
	apikeyDescIdentifier := apikeyFields[1].Descriptor()
	// apikey.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	apikey.IdentifierValidator = apikeyDescIdentifier.Validators[0].(func(string) error)
	// apikeyDescName is the schema descriptor for name field.
	apikeyDescName := apikeyFields[2].Descriptor()
	// apikey.NameValidator is a validator for the "name" field. It is called by the builders before save.
	apikey.NameValidator = apikeyDescName.Validators[0].(func(string) error)
	// apikeyDescSalt is the schema descriptor for salt field.
	apikeyDescSalt := apikeyFields[3].Descriptor()
	// apikey.SaltValidator is a validator for the "salt" field. It is called by the builders before save.
	apikey.SaltValidator = apikeyDescSalt.Validators[0].(func([]byte) error)
	// apikeyDescHash is the schema descriptor for hash field.
	apikeyDescHash := apikeyFields[4].Descriptor()
	// apikey.HashValidator is a validator for the "hash" field. It is called by the builders before save.
	apikey.HashValidator = apikeyDescHash.Validators[0].(func([]byte) error)
	authorityFields := schema.Authority{}.Fields()
	_ = authorityFields
	// authorityDescCreatedAt is the schema descriptor for created_at field.
	authorityDescCreatedAt := authorityFields[0].Descriptor()
	// authority.DefaultCreatedAt holds the default value on creation for the created_at field.
	authority.DefaultCreatedAt = authorityDescCreatedAt.Default.(func() time.Time)
	// authorityDescIdentifier is the schema descriptor for identifier field.
	authorityDescIdentifier := authorityFields[1].Descriptor()
	// authority.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	authority.IdentifierValidator = authorityDescIdentifier.Validators[0].(func(string) error)
	// authorityDescCaCertificatePem is the schema descriptor for ca_certificate_pem field.
	authorityDescCaCertificatePem := authorityFields[2].Descriptor()
	// authority.CaCertificatePemValidator is a validator for the "ca_certificate_pem" field. It is called by the builders before save.
	authority.CaCertificatePemValidator = authorityDescCaCertificatePem.Validators[0].(func([]byte) error)
	// authorityDescEncryptedPrivateKey is the schema descriptor for encrypted_private_key field.
	authorityDescEncryptedPrivateKey := authorityFields[3].Descriptor()
	// authority.EncryptedPrivateKeyValidator is a validator for the "encrypted_private_key" field. It is called by the builders before save.
	authority.EncryptedPrivateKeyValidator = authorityDescEncryptedPrivateKey.Validators[0].(func(string) error)
	clienttemplateFields := schema.ClientTemplate{}.Fields()
	_ = clienttemplateFields
	// clienttemplateDescCreatedAt is the schema descriptor for created_at field.
	clienttemplateDescCreatedAt := clienttemplateFields[0].Descriptor()
	// clienttemplate.DefaultCreatedAt holds the default value on creation for the created_at field.
	clienttemplate.DefaultCreatedAt = clienttemplateDescCreatedAt.Default.(func() time.Time)
	// clienttemplateDescIdentifier is the schema descriptor for identifier field.
	clienttemplateDescIdentifier := clienttemplateFields[1].Descriptor()
	// clienttemplate.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	clienttemplate.IdentifierValidator = clienttemplateDescIdentifier.Validators[0].(func(string) error)
	// clienttemplateDescCommonName is the schema descriptor for common_name field.
	clienttemplateDescCommonName := clienttemplateFields[2].Descriptor()
	// clienttemplate.CommonNameValidator is a validator for the "common_name" field. It is called by the builders before save.
	clienttemplate.CommonNameValidator = clienttemplateDescCommonName.Validators[0].(func(string) error)
	// clienttemplateDescTag is the schema descriptor for tag field.
	clienttemplateDescTag := clienttemplateFields[3].Descriptor()
	// clienttemplate.TagValidator is a validator for the "tag" field. It is called by the builders before save.
	clienttemplate.TagValidator = clienttemplateDescTag.Validators[0].(func(string) error)
	// clienttemplateDescValidity is the schema descriptor for validity field.
	clienttemplateDescValidity := clienttemplateFields[4].Descriptor()
	// clienttemplate.ValidityValidator is a validator for the "validity" field. It is called by the builders before save.
	clienttemplate.ValidityValidator = clienttemplateDescValidity.Validators[0].(func(string) error)
	// clienttemplateDescAllowAdditionalDNSNames is the schema descriptor for allow_additional_dns_names field.
	clienttemplateDescAllowAdditionalDNSNames := clienttemplateFields[6].Descriptor()
	// clienttemplate.DefaultAllowAdditionalDNSNames holds the default value on creation for the allow_additional_dns_names field.
	clienttemplate.DefaultAllowAdditionalDNSNames = clienttemplateDescAllowAdditionalDNSNames.Default.(bool)
	// clienttemplateDescAllowAdditionalIps is the schema descriptor for allow_additional_ips field.
	clienttemplateDescAllowAdditionalIps := clienttemplateFields[8].Descriptor()
	// clienttemplate.DefaultAllowAdditionalIps holds the default value on creation for the allow_additional_ips field.
	clienttemplate.DefaultAllowAdditionalIps = clienttemplateDescAllowAdditionalIps.Default.(bool)
	rootkeyFields := schema.RootKey{}.Fields()
	_ = rootkeyFields
	// rootkeyDescCreatedAt is the schema descriptor for created_at field.
	rootkeyDescCreatedAt := rootkeyFields[0].Descriptor()
	// rootkey.DefaultCreatedAt holds the default value on creation for the created_at field.
	rootkey.DefaultCreatedAt = rootkeyDescCreatedAt.Default.(func() time.Time)
	// rootkeyDescIdentifier is the schema descriptor for identifier field.
	rootkeyDescIdentifier := rootkeyFields[1].Descriptor()
	// rootkey.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	rootkey.IdentifierValidator = rootkeyDescIdentifier.Validators[0].(func(string) error)
	// rootkeyDescName is the schema descriptor for name field.
	rootkeyDescName := rootkeyFields[2].Descriptor()
	// rootkey.NameValidator is a validator for the "name" field. It is called by the builders before save.
	rootkey.NameValidator = rootkeyDescName.Validators[0].(func(string) error)
	// rootkeyDescSalt is the schema descriptor for salt field.
	rootkeyDescSalt := rootkeyFields[3].Descriptor()
	// rootkey.SaltValidator is a validator for the "salt" field. It is called by the builders before save.
	rootkey.SaltValidator = rootkeyDescSalt.Validators[0].(func([]byte) error)
	// rootkeyDescHash is the schema descriptor for hash field.
	rootkeyDescHash := rootkeyFields[4].Descriptor()
	// rootkey.HashValidator is a validator for the "hash" field. It is called by the builders before save.
	rootkey.HashValidator = rootkeyDescHash.Validators[0].(func([]byte) error)
	servertemplateFields := schema.ServerTemplate{}.Fields()
	_ = servertemplateFields
	// servertemplateDescCreatedAt is the schema descriptor for created_at field.
	servertemplateDescCreatedAt := servertemplateFields[0].Descriptor()
	// servertemplate.DefaultCreatedAt holds the default value on creation for the created_at field.
	servertemplate.DefaultCreatedAt = servertemplateDescCreatedAt.Default.(func() time.Time)
	// servertemplateDescIdentifier is the schema descriptor for identifier field.
	servertemplateDescIdentifier := servertemplateFields[1].Descriptor()
	// servertemplate.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	servertemplate.IdentifierValidator = servertemplateDescIdentifier.Validators[0].(func(string) error)
	// servertemplateDescCommonName is the schema descriptor for common_name field.
	servertemplateDescCommonName := servertemplateFields[2].Descriptor()
	// servertemplate.CommonNameValidator is a validator for the "common_name" field. It is called by the builders before save.
	servertemplate.CommonNameValidator = servertemplateDescCommonName.Validators[0].(func(string) error)
	// servertemplateDescTag is the schema descriptor for tag field.
	servertemplateDescTag := servertemplateFields[3].Descriptor()
	// servertemplate.TagValidator is a validator for the "tag" field. It is called by the builders before save.
	servertemplate.TagValidator = servertemplateDescTag.Validators[0].(func(string) error)
	// servertemplateDescValidity is the schema descriptor for validity field.
	servertemplateDescValidity := servertemplateFields[4].Descriptor()
	// servertemplate.ValidityValidator is a validator for the "validity" field. It is called by the builders before save.
	servertemplate.ValidityValidator = servertemplateDescValidity.Validators[0].(func(string) error)
	// servertemplateDescAllowAdditionalDNSNames is the schema descriptor for allow_additional_dns_names field.
	servertemplateDescAllowAdditionalDNSNames := servertemplateFields[6].Descriptor()
	// servertemplate.DefaultAllowAdditionalDNSNames holds the default value on creation for the allow_additional_dns_names field.
	servertemplate.DefaultAllowAdditionalDNSNames = servertemplateDescAllowAdditionalDNSNames.Default.(bool)
	// servertemplateDescAllowAdditionalIps is the schema descriptor for allow_additional_ips field.
	servertemplateDescAllowAdditionalIps := servertemplateFields[8].Descriptor()
	// servertemplate.DefaultAllowAdditionalIps holds the default value on creation for the allow_additional_ips field.
	servertemplate.DefaultAllowAdditionalIps = servertemplateDescAllowAdditionalIps.Default.(bool)
}
