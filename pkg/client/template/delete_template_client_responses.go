// Code generated by go-swagger; DO NOT EDIT.

package template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteTemplateClientReader is a Reader for the DeleteTemplateClient structure.
type DeleteTemplateClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTemplateClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTemplateClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTemplateClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteTemplateClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTemplateClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteTemplateClientConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewDeleteTemplateClientPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTemplateClientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /template/client] DeleteTemplateClient", response, response.Code())
	}
}

// NewDeleteTemplateClientOK creates a DeleteTemplateClientOK with default headers values
func NewDeleteTemplateClientOK() *DeleteTemplateClientOK {
	return &DeleteTemplateClientOK{}
}

/*
DeleteTemplateClientOK describes a response with status code 200, with default header values.

OK
*/
type DeleteTemplateClientOK struct {
	Payload string
}

// IsSuccess returns true when this delete template client o k response has a 2xx status code
func (o *DeleteTemplateClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete template client o k response has a 3xx status code
func (o *DeleteTemplateClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template client o k response has a 4xx status code
func (o *DeleteTemplateClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete template client o k response has a 5xx status code
func (o *DeleteTemplateClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template client o k response a status code equal to that given
func (o *DeleteTemplateClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete template client o k response
func (o *DeleteTemplateClientOK) Code() int {
	return 200
}

func (o *DeleteTemplateClientOK) Error() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientOK  %+v", 200, o.Payload)
}

func (o *DeleteTemplateClientOK) String() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientOK  %+v", 200, o.Payload)
}

func (o *DeleteTemplateClientOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateClientBadRequest creates a DeleteTemplateClientBadRequest with default headers values
func NewDeleteTemplateClientBadRequest() *DeleteTemplateClientBadRequest {
	return &DeleteTemplateClientBadRequest{}
}

/*
DeleteTemplateClientBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteTemplateClientBadRequest struct {
	Payload string
}

// IsSuccess returns true when this delete template client bad request response has a 2xx status code
func (o *DeleteTemplateClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template client bad request response has a 3xx status code
func (o *DeleteTemplateClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template client bad request response has a 4xx status code
func (o *DeleteTemplateClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template client bad request response has a 5xx status code
func (o *DeleteTemplateClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template client bad request response a status code equal to that given
func (o *DeleteTemplateClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete template client bad request response
func (o *DeleteTemplateClientBadRequest) Code() int {
	return 400
}

func (o *DeleteTemplateClientBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTemplateClientBadRequest) String() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTemplateClientBadRequest) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateClientUnauthorized creates a DeleteTemplateClientUnauthorized with default headers values
func NewDeleteTemplateClientUnauthorized() *DeleteTemplateClientUnauthorized {
	return &DeleteTemplateClientUnauthorized{}
}

/*
DeleteTemplateClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteTemplateClientUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this delete template client unauthorized response has a 2xx status code
func (o *DeleteTemplateClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template client unauthorized response has a 3xx status code
func (o *DeleteTemplateClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template client unauthorized response has a 4xx status code
func (o *DeleteTemplateClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template client unauthorized response has a 5xx status code
func (o *DeleteTemplateClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template client unauthorized response a status code equal to that given
func (o *DeleteTemplateClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete template client unauthorized response
func (o *DeleteTemplateClientUnauthorized) Code() int {
	return 401
}

func (o *DeleteTemplateClientUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTemplateClientUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTemplateClientUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateClientNotFound creates a DeleteTemplateClientNotFound with default headers values
func NewDeleteTemplateClientNotFound() *DeleteTemplateClientNotFound {
	return &DeleteTemplateClientNotFound{}
}

/*
DeleteTemplateClientNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteTemplateClientNotFound struct {
	Payload string
}

// IsSuccess returns true when this delete template client not found response has a 2xx status code
func (o *DeleteTemplateClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template client not found response has a 3xx status code
func (o *DeleteTemplateClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template client not found response has a 4xx status code
func (o *DeleteTemplateClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template client not found response has a 5xx status code
func (o *DeleteTemplateClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template client not found response a status code equal to that given
func (o *DeleteTemplateClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete template client not found response
func (o *DeleteTemplateClientNotFound) Code() int {
	return 404
}

func (o *DeleteTemplateClientNotFound) Error() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTemplateClientNotFound) String() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTemplateClientNotFound) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateClientConflict creates a DeleteTemplateClientConflict with default headers values
func NewDeleteTemplateClientConflict() *DeleteTemplateClientConflict {
	return &DeleteTemplateClientConflict{}
}

/*
DeleteTemplateClientConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteTemplateClientConflict struct {
	Payload string
}

// IsSuccess returns true when this delete template client conflict response has a 2xx status code
func (o *DeleteTemplateClientConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template client conflict response has a 3xx status code
func (o *DeleteTemplateClientConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template client conflict response has a 4xx status code
func (o *DeleteTemplateClientConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template client conflict response has a 5xx status code
func (o *DeleteTemplateClientConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template client conflict response a status code equal to that given
func (o *DeleteTemplateClientConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete template client conflict response
func (o *DeleteTemplateClientConflict) Code() int {
	return 409
}

func (o *DeleteTemplateClientConflict) Error() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientConflict  %+v", 409, o.Payload)
}

func (o *DeleteTemplateClientConflict) String() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientConflict  %+v", 409, o.Payload)
}

func (o *DeleteTemplateClientConflict) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateClientConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateClientPreconditionFailed creates a DeleteTemplateClientPreconditionFailed with default headers values
func NewDeleteTemplateClientPreconditionFailed() *DeleteTemplateClientPreconditionFailed {
	return &DeleteTemplateClientPreconditionFailed{}
}

/*
DeleteTemplateClientPreconditionFailed describes a response with status code 412, with default header values.

Precondition Failed
*/
type DeleteTemplateClientPreconditionFailed struct {
	Payload string
}

// IsSuccess returns true when this delete template client precondition failed response has a 2xx status code
func (o *DeleteTemplateClientPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template client precondition failed response has a 3xx status code
func (o *DeleteTemplateClientPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template client precondition failed response has a 4xx status code
func (o *DeleteTemplateClientPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template client precondition failed response has a 5xx status code
func (o *DeleteTemplateClientPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template client precondition failed response a status code equal to that given
func (o *DeleteTemplateClientPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the delete template client precondition failed response
func (o *DeleteTemplateClientPreconditionFailed) Code() int {
	return 412
}

func (o *DeleteTemplateClientPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteTemplateClientPreconditionFailed) String() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteTemplateClientPreconditionFailed) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateClientPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateClientInternalServerError creates a DeleteTemplateClientInternalServerError with default headers values
func NewDeleteTemplateClientInternalServerError() *DeleteTemplateClientInternalServerError {
	return &DeleteTemplateClientInternalServerError{}
}

/*
DeleteTemplateClientInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteTemplateClientInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this delete template client internal server error response has a 2xx status code
func (o *DeleteTemplateClientInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template client internal server error response has a 3xx status code
func (o *DeleteTemplateClientInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template client internal server error response has a 4xx status code
func (o *DeleteTemplateClientInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete template client internal server error response has a 5xx status code
func (o *DeleteTemplateClientInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete template client internal server error response a status code equal to that given
func (o *DeleteTemplateClientInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete template client internal server error response
func (o *DeleteTemplateClientInternalServerError) Code() int {
	return 500
}

func (o *DeleteTemplateClientInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTemplateClientInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /template/client][%d] deleteTemplateClientInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTemplateClientInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *DeleteTemplateClientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
